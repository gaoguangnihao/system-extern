From 4bea2367ff87e5f0672221dcdf4677f253bb7dfa Mon Sep 17 00:00:00 2001
From: "hongxiu.wang" <hongxiu.wang@kaiostech.com>
Date: Thu, 27 Aug 2020 10:50:15 +0800
Subject: [PATCH] enable shell to setenforce permit

---
 domain.te | 2 +-
 kaios.mk  | 6 +++---
 shell.te  | 3 +++
 3 files changed, 7 insertions(+), 4 deletions(-)
 mode change 100644 => 100755 domain.te
 mode change 100644 => 100755 kaios.mk
 mode change 100644 => 100755 shell.te

diff --git a/domain.te b/domain.te
old mode 100644
new mode 100755
index 476ee20..d9d2934
--- a/domain.te
+++ b/domain.te
@@ -237,7 +237,7 @@ neverallow { domain -system_server } security_file:lnk_file { create setattr unl
 # init starts in kernel domain and switches to init domain via setcon in
 # the init.rc, so the setenforce occurs while still in kernel. After
 # switching domains, there is never any need to setenforce again by init.
-neverallow domain kernel:security setenforce;
+#neverallow domain kernel:security setenforce;
 neverallow { domain -kernel } kernel:security setcheckreqprot;
 
 # No booleans in AOSP policy, so no need to ever set them.
diff --git a/kaios.mk b/kaios.mk
old mode 100644
new mode 100755
index 75a6728..04e7cc3
--- a/kaios.mk
+++ b/kaios.mk
@@ -65,7 +65,7 @@ $(sepolicy_policy.conf): PRIVATE_MLS_CATS := $(MLS_CATS)
 $(sepolicy_policy.conf) : $(call build_policy, $(sepolicy_build_files))
 	@mkdir -p $(dir $@)
 	$(hide) m4 -D mls_num_sens=$(PRIVATE_MLS_SENS) -D mls_num_cats=$(PRIVATE_MLS_CATS) \
-		-D target_build_variant=$(TARGET_BUILD_VARIANT) \
+		-D target_build_variant=eng \
 		-D target_kaios=true \
 		-s $^ > $@
 	$(hide) sed '/dontaudit/d' $@ > $@.dontaudit
@@ -93,7 +93,7 @@ $(sepolicy_policy_recovery.conf): PRIVATE_MLS_CATS := $(MLS_CATS)
 $(sepolicy_policy_recovery.conf) : $(call build_policy, $(sepolicy_build_files))
 	@mkdir -p $(dir $@)
 	$(hide) m4 -D mls_num_sens=$(PRIVATE_MLS_SENS) -D mls_num_cats=$(PRIVATE_MLS_CATS) \
-		-D target_build_variant=$(TARGET_BUILD_VARIANT) \
+		-D target_build_variant=eng \
 		-D target_kaios=true \
 		-D target_recovery=true \
 		-s $^ > $@
@@ -332,4 +332,4 @@ built_fc :=
 built_pc :=
 built_svc :=
 
-include $(call all-makefiles-under,$(LOCAL_PATH))
\ No newline at end of file
+include $(call all-makefiles-under,$(LOCAL_PATH))
diff --git a/shell.te b/shell.te
old mode 100644
new mode 100755
index 1be9eec..e0d50b5
--- a/shell.te
+++ b/shell.te
@@ -84,3 +84,6 @@ allow shell bootchart_data_file:file create_file_perms;
 # bugs, so we want to ensure the shell user never has this
 # capability.
 neverallow shell file_type:file link;
+
+neverallow {domain -shell} kernel:security setenforce;
+allow shell kernel:security setenforce;
\ No newline at end of file
-- 
2.18.2

